#!/usr/bin/env node

// todo: get config file path from argv
var config = require('../config');
var Storage = require('../app/storage');
var Instagram = require('../app/sdk/instagram');
var Dropbox = require('../app/sdk/dropbox');
var moment = require('moment');
var debug = require('debug')('sync');
var Q = require('q');

var storage = new Storage(config.mysql, config.redis);
var instagram = new Instagram(config.instagram);
var dropbox = new Dropbox(config.dropbox);

var fileName;

storage.getUsersP()
.then(function (users) {
  return users.filter(function (user) {
    return user.instagram_token && user.dropbox_token;
  });
})
.then(function (users) {
  var pArr = [];
  users.forEach(function (user) {
    var p = dropbox.isAppInstalledP(user.dropbox_token)
    .then(function () {
      return instagram.getLikesP(user.instagram_token);
    })
    .then(function (likes) {
      var pArr2 = [];
      likes.forEach(function (like) {

        var p2 = storage.checkMediaSavedP(user.id, like.id)
        .then(function (saved) {

          if (saved) {
            debug(user.id, like.id, 'already saved');
            return;
          }

          fileName = like.user.username + ' ' + moment.unix(like.created_time).format('DD-MM-YYYY HH.mm') + '.jpg';
          debug(user.id, like.id, 'saving as '+fileName);

          return dropbox.saveUrlP({
            accessToken: user.dropbox_token,
            url: like.images.standard_resolution.url,
            path: fileName
          })
          .then(function (res) {
            debug(res);
            return storage.saveLikedMedia(user.id, like.id);
          })
          .then(function () {
            return storage.setLastSync(user.id, moment().unix());
          });
        });

        pArr2.push(p2);
      });
      return Q.allSettled(pArr2);
    });
    pArr.push(p);
  });
  return Q.allSettled(pArr);
})
.catch(function (err) {
  console.error(err);
})
.done(function () {
  storage.terminate();
  debug('Done');
});
